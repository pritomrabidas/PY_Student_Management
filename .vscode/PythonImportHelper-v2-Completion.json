[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "StudentApp.migrations.0001_initial",
        "description": "StudentApp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Hobby',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "StudentApp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "StudentAdmin",
        "kind": 6,
        "importPath": "StudentApp.admin",
        "description": "StudentApp.admin",
        "peekOfCode": "class StudentAdmin(admin.ModelAdmin):\n    list_display = [\"name\", \"email\", \"age\",\"date_of_birth\",\"religion\",]\n    search_fields = [\"name\", \"email\", \"age\",\"date_of_birth\",\"religion\",]\nadmin.site.register(Student,StudentAdmin)\nadmin.site.register(Subject)\nadmin.site.register(Hobby)\nadmin.site.register(Result)",
        "detail": "StudentApp.admin",
        "documentation": {}
    },
    {
        "label": "StudentappConfig",
        "kind": 6,
        "importPath": "StudentApp.apps",
        "description": "StudentApp.apps",
        "peekOfCode": "class StudentappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'StudentApp'",
        "detail": "StudentApp.apps",
        "documentation": {}
    },
    {
        "label": "Hobby",
        "kind": 6,
        "importPath": "StudentApp.models",
        "description": "StudentApp.models",
        "peekOfCode": "class Hobby(models.Model):\n    name = models.CharField(max_length=100)\n    def _str_(self):\n        return self.name\nclass Subject(models.Model):\n    name = models.CharField(max_length=100)\n    def _str_(self):\n        return self.name\nclass Result(models.Model):\n    mark = models.FloatField()",
        "detail": "StudentApp.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "StudentApp.models",
        "description": "StudentApp.models",
        "peekOfCode": "class Subject(models.Model):\n    name = models.CharField(max_length=100)\n    def _str_(self):\n        return self.name\nclass Result(models.Model):\n    mark = models.FloatField()\n    subject = models.ForeignKey(Subject,on_delete=models.CASCADE)\n    def _str_(self):\n        return self.subject.name\nclass Student(models.Model):",
        "detail": "StudentApp.models",
        "documentation": {}
    },
    {
        "label": "Result",
        "kind": 6,
        "importPath": "StudentApp.models",
        "description": "StudentApp.models",
        "peekOfCode": "class Result(models.Model):\n    mark = models.FloatField()\n    subject = models.ForeignKey(Subject,on_delete=models.CASCADE)\n    def _str_(self):\n        return self.subject.name\nclass Student(models.Model):\n    RELIGION = {\n    \"Hindu\": \"Hindu\",\n    \"Muslim\": \"Muslim\",\n    \"Christian\": \"Christian\",",
        "detail": "StudentApp.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "StudentApp.models",
        "description": "StudentApp.models",
        "peekOfCode": "class Student(models.Model):\n    RELIGION = {\n    \"Hindu\": \"Hindu\",\n    \"Muslim\": \"Muslim\",\n    \"Christian\": \"Christian\",\n    \"Buddhist\": \"Buddhist\",\n    \"Others\": \"Others\",\n}\n    GENDER = {\n    \"Male\": \"Male\",",
        "detail": "StudentApp.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "StudentApp.urls",
        "description": "StudentApp.urls",
        "peekOfCode": "urlpatterns = [\n    path('', firstFun,name='first'),\n    path('delete_prof/<int:id>',delete_prof,name='delete_prof'),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "StudentApp.urls",
        "documentation": {}
    },
    {
        "label": "firstFun",
        "kind": 2,
        "importPath": "StudentApp.views",
        "description": "StudentApp.views",
        "peekOfCode": "def firstFun(request):\n    Students = Student.objects.all()\n    if request.method == 'GET':\n        data = request.GET.get('src')\n        if data:\n            Students = Student.objects.filter(Q(name__icontains=data) | Q(email__icontains=data))\n    return render(request,'Home/Home.html',{'stu':Students})\ndef delete_prof(request,id):\n    Students = Student.objects.get(id=id)\n    Students.delete()",
        "detail": "StudentApp.views",
        "documentation": {}
    },
    {
        "label": "delete_prof",
        "kind": 2,
        "importPath": "StudentApp.views",
        "description": "StudentApp.views",
        "peekOfCode": "def delete_prof(request,id):\n    Students = Student.objects.get(id=id)\n    Students.delete()\n    return render(firstFun)",
        "detail": "StudentApp.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "studentProject.asgi",
        "description": "studentProject.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "studentProject.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.getenv('Secret_code')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "SECRET_KEY = os.getenv('Secret_code')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'tailwind',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'tailwind',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'tailwind',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'tailwind',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'StudentApp',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'studentProject.urls'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "ROOT_URLCONF = 'studentProject.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['Template'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['Template'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "WSGI_APPLICATION = 'studentProject.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "MEDIA_URL = 'media/'\nSTATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / 'static', ]\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "studentProject.settings",
        "description": "studentProject.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "studentProject.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "studentProject.urls",
        "description": "studentProject.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('StudentApp.urls')),\n]",
        "detail": "studentProject.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "studentProject.wsgi",
        "description": "studentProject.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "studentProject.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    load_dotenv()\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'studentProject.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"",
        "detail": "manage",
        "documentation": {}
    }
]